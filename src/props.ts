export default {
  "Affix": "| props | 类型 | 默认值 | 说明 |\n| :--- | :--- | :--- | :--- |\n| OffsetTop | number | - | 距离窗口顶部达到指定偏移量后触发 |\n| OffsetBottom | number | - | 距离窗口底部达到指定偏移量后触发 |\n| ScrollContainer | HTMLElement \\| (() => HTMLElement) \\| Window | window | 设置 `Affix` 需要监听其滚动事件的元素，值为一个返回对应 DOM 元素的函数 |\n| OnChange | (affixed: boolean) => void | - | 固定状态改变时触发的回调函数 |\n\n",
  "Badge": "| props | 类型 | 默认值 | 说明 |\n| :--- | :--- | :--- | :--- |\n| Theme | string | 'danger' | 设置主题，可选值为 `primary`、`success`、`warning`、`danger` |\n| Shape | string | 'dot' | 设置形状，可选值为 `dot`、`rect` 、`radius`、`round`、`circle`、`leaf` |\n| Text | ReactNode | - | 设置显示的文字 |\n\n",
  "Button": "| props | 类型 | 默认值 | 说明 |\n| :--- | :--- | :--- | :--- |\n| Theme | string | 'default' | 设置主题，可选值为 `default`、`primary`、`danger` |\n| Size | string | 'md' | 设置大小，可选值为 `md`、`lg`、`sm`、`xs` |\n| Shape | string | 'radius' | 设置形状，可选值为 `rect`、`radius`、`round`、`circle` |\n| Block | boolean | false | 是否块级元素 |\n| Ghost | boolean | false | 是否幽灵按钮 |\n| Shadow | boolean | false | 是否带阴影 |\n| Disabled | boolean | false | 是否禁用 |\n| Loading | boolean | false | 是否加载中状态 |\n| Icon | ReactNode | - | 设置图标 |\n| OnClick | MouseEventHandler<Element> | - | 点击后触发的回调函数 |\n| HtmlType | string | 'button' | 设置原生 button 的`type`值，可选值为`button`、`submit`、`reset` |\n| Href | string | - | 点击跳转的地址，指定此属性`button`的行为和 a 标签一致 |\n| Target | string | - | 规定在何处打开链接文档，相当于 a 标签的`target`属性，`href`属性存在时生效 |\n| MimeType | string | - | 链接中指向的文档的 mime 类型，相当于 a 标签的`type`属性，`href`属性存在时生效 |\n\n",
  "Calendar": "| props | 类型 | 默认值 | 说明 |\n| :--- | :--- | :--- | :--- |\n| Value | Date \\| Date[] | - | 值 |\n| DefaultValue | Date \\| Date[] | - | 初始值 |\n| Min | Date | new Date() | 最小可选日期 |\n| Max | Date | min + 1 年 | 最大可选日期 |\n| Multiple | boolean | false | 是否双选 |\n| DateRender | (date?: Date) => void | (date) => date.getDate() | 日期渲染函数 |\n| DisabledDate | (date?: Date) => boolean | () => false | 日期是否禁止选择 |\n| OnChange | (value?: Date[]) => void | - | 日期选择发生变化时触发的回调函数 |\n\n",
  "Carousel": "| props | 类型 | 默认值 | 说明 |\n| :--- | :--- | :--- | :--- |\n| Direction | string | 'left' | 滑动方向，可选值 `left`、`right`、`up`、`down` |\n| Height | number \\| string | 160 | 设置轮播区域高度 |\n| ActiveIndex | number | 0 | 当前页面的索引 |\n| Loop | boolean | false | 是否循环 |\n| Swipeable | boolean | true | 是否支持拖拽滑动 |\n| AutoPlay | boolean | false | 是否自动轮播 |\n| AutoPlayIntervalTime | number | 3000 | 自动轮播时间间隔，单位：毫秒 |\n| MoveDistanceRatio | number | 0.5 | 移动距离比例临界点 |\n| MoveTimeSpan | number | 300 | 移动时间跨度临界点，单位：毫秒 |\n| AnimationDuration | number | 500 | 动画执行时间，单位：毫秒 |\n| ShowPagination | boolean | true | 是否显示分页器 |\n| OnChange | (activeIndex?: number) => void | - | 值变化时触发的回调函数 |\n| OnChangeEnd | (activeIndex?: number) => void | - | 值变化动画结束后触发的回调函数 |\n\n",
  "Cell": "| props | 类型 | 默认值 | 说明 |\n| :--- | :--- | :--- | :--- |\n| HasArrow | boolean | false | 是否显示箭头 |\n| Icon | ReactNode | - | 设置图标 |\n| Title | ReactNode | - | 设置标题区域内容 |\n| Description | ReactNode | - | 设置描述区域内容 |\n| Help | ReactNode | - | 设置下方提示信息区域内容，通常配合 `Message` 组件使用 |\n| OnClick | () => void | - | 点击后触发的回调函数 |\n\n",
  "Checkbox": "| props | 类型 | 默认值 | 说明 |\n| :--- | :--- | :--- | :--- |\n| Type | string | - | 显示类型，可选值 `button`, `cell` |\n| Disabled | boolean | false | 是否禁用 |\n| Value | string | number | - | 值 |\n| Checked | boolean | - | 当前是否选中 |\n| DefaultChecked | boolean | - | 初始是否选中 |\n| Indeterminate | boolean | false | 当前是否为未全选状态 |\n| Id | string | - | 方便外部带有 for 属性的 label 标签控制当前 checkbox |\n| OnChange | (event?: ChangeEvent | - | 值变化时触发的回调函数 |\n| Type | string | - | 显示类型，可选值 `button`, `cell` |\n| Value | number[] \\| string[] | [] | 选中值 |\n| DefaultValue | number[] \\| string[] | [] | 初始选中值 |\n| Disabled | boolean | false | 是否禁用 |\n| Block | boolean | false | 子项是否为块级元素 |\n| OnChange | (values?: number[] \\| string[]) => void | - | 值变化时触发的回调函数 |\n| Size | string | 'xs' | 按钮类型时的大小，可选值为 `lg`、`md`、`sm`、`xs` |\n| Shape | string | 'radius' | 按钮类型时的形状，可选值 `rect`, `radius`, `round` |\n| Ghost | boolean | false | 按钮类型时，选中项样式是否为幽灵按钮 |\n\n",
  "Collapse": "| props | 类型 | 默认值 | 说明 |\n| :--- | :--- | :--- | :--- |\n| Multiple | boolean | false | 是否可以同时展开多项 |\n| Animated | boolean | false | 是否添加展开动画 |\n| ActiveKey | string \\| number \\| string[] \\| number[] | [] | 动态更新展开项的索引数组或字符串或数字 |\n| DefaultActiveKey | string \\| number \\| string[] \\| number[] | [] | 初始化默认展开项的索引数组或字符串或数字 |\n| OnChange | (activeKey?: string \\| number \\| string[] \\| number[]) => void | - | 点击某一项的回调函数，返回选中的项 |\n| Title | ReactNode | - | 每一项的名称 |\n| Key | string \\| number | - | 对应 activeKey |\n| Disabled | boolean | false | 是否禁用 |\n| OnChange | (active?: boolean) => void | - | 点击某一项的回调函数 |\n\n",
  "Drag": "| props | 类型 | 默认值 | 说明 |\n| :--- | :--- | :--- | :--- |\n| OnDragStart | (event?: MouseEvent \\| TouchEvent, dragState?: DragState) => void | - | 触摸/点击 起始时触发的事件 |\n| OnDragMove | (event?: MouseEvent \\| TouchEvent, dragState?: DragState) => boolean | - | 拖拽移动时触发的事件 |\n| OnDragEnd | (event?: MouseEvent \\| TouchEvent, dragState?: DragState) => void | - | 触摸/点击 结束时触发的事件 |\n| StartTime | Date | new Date() | 起始时间 |\n| StartX | number | - | 起始点 x 坐标 |\n| StartY | number | - | 起始点 y 坐标 |\n| OffsetX | number | - | 横向偏移量 |\n| OffsetY | number | - | 纵向偏移量 |\n\n",
  "Icon": "| props | 类型 | 默认值 | 说明 |\n| :--- | :--- | :--- | :--- |\n| Theme | string | 'default' | 主题，可选值 `default`、`primary`、`success`、`warning`、`danger` |\n| Size | string | 'md' | 大小，可选值 `sm`、`md`、`lg` |\n| Type | string | - | 图标类型，可选值详见 demo 的基本用法 |\n| Component | React.ComponentType<React.SVGProps<SVGSVGElement>> | - | 本地 svg 文件，需配合 viewBox 使用 |\n| ViewBox | string | '0 0 32 32' | 自定义 SVG 图标时，用来设置画布的起始坐标及大小 |\n\n",
  "Input": "| props | 类型 | 默认值 | 说明 |\n| :--- | :--- | :--- | :--- |\n| Type | string | 'text' | 类型，可选值 `text`、`number`、`idcard`、`price`、`password`、`search` |\n| Value | number \\| string | - | 值 |\n| DefaultValue | number \\| string | - | 初始值 |\n| Disabled | boolean | false | 是否禁用 |\n| ReadOnly | boolean | false | 是否只读 |\n| Rows | number | - | 多行文本时的显示行数。type 为 text 类型时有效。 |\n| AutoHeight | boolean | false | 是否高度自适应 |\n| MaxLength | number | - | 输入字数上限 |\n| ShowLength | boolean | false | 是否显示输入字数。多行文本（type=\"text\"且包含 rows 属性）时有效。 |\n| Clearable | boolean | true | 是否显示清除按钮。多行文本（type=\"text\"且包含 rows 属性）时无效。必须为受控组件（属性包含 value、onChange）时方可生效。 |\n| OnChange | (value?: number \\| string) => void | - | 值变化时触发的回调函数 |\n\n",
  "Keyboard": "| props | 类型 | 默认值 | 说明 |\n| :--- | :--- | :--- | :--- |\n| Type | string | 'number' | 键盘类型，可选值 `number`、`price`、`idcard` |\n| OnKeyClick | (key?: string) => void | - | 点击按键时触发的回调函数 |\n| Visible | boolean | false | 是否展示 |\n| Destroy | boolean | true | 弹层关闭后是否移除节点 |\n\n",
  "Loading": "| props | 类型 | 默认值 | 说明 |\n| :--- | :--- | :--- | :--- |\n| Visible | boolean | false | 是否展示 |\n| Content | ReactNode | - | 显示的内容 |\n| StayTime | number | 3000 | 自动关闭前停留的时间（单位：毫秒） |\n| Mask | boolean | true | 是否展示遮罩层 |\n| OnMaskClick | () => void | - | 点击遮罩层时触发的回调函数 |\n| AfterClose | () => void | - | Loading 隐藏后的回调函数 |\n| MountContainer | HTMLElement | () => HTMLElement | document.body | 指定 Loading 挂载的 HTML 节点 |\n\n",
  "Marquee": "| props | 类型 | 默认值 | 说明 |\n| :--- | :--- | :--- | :--- |\n| Direction | string | 'left' | 滚动方向，可选值为`left`、`right`、`up`、`down` |\n| Width | number \\| string | - | 容器宽度 |\n| Height | number \\| string | - | 容器高度 |\n| Loop | boolean | true | 是否循环 |\n| AnimationDuration | number | 6000 | 动画执行时间（单位：毫秒） |\n| AnimationDelay | number | 0 | 动画延迟执行时间（单位：毫秒） |\n\n",
  "Mask": "| props | 类型 | 默认值 | 说明 |\n| :--- | :--- | :--- | :--- |\n| Visible | boolean | 否 | false |\n| Type | 'normal' \\| 'transparent' | 否 | 'normal' |\n| OnClick | MouseEventHandler | 否 | \\  |\n\n",
  "Message": "| props | 类型 | 默认值 | 说明 |\n| :--- | :--- | :--- | :--- |\n| Theme | string | 'primary' | 主题，可选值 `default`、`primary`、`success`、`warning`、`danger` |\n| Size | string | 'md' | 设置大小，可选值为 `md`、`lg` |\n| Icon | ReactNode | - | 设置图标 |\n| Closable | boolean | false | 是否显示关闭按钮 |\n| HasArrow | boolean | false | 是否显示箭头 |\n| OnClick | () => void | - | 点击后触发的回调函数 |\n\n",
  "Modal": "| props | 类型 | 默认值 | 说明 |\n| :--- | :--- | :--- | :--- |\n| Shape | string | 'radius' | 形状，可选值 `rect`、`radius` |\n| Visible | boolean | false | 是否显示 |\n| AnimationType | string | 'fade' | 动画效果，可选值 `fade`, `door`, `flip`, `rotate`, `zoom`,`moveUp`, `moveDown`, `moveLeft`, `moveRight`,`slideUp`, `slideDown`, `slideLeft`, `slideRight` |\n| AnimationDuration | number | 200 | 动画执行时间（单位：毫秒） |\n| Width | string | number | '70%' | 宽度 |\n| Mask | boolean | true | 是否展示遮罩层 |\n| MaskType | string | 'normal' | 遮罩层的类型，可选值 `transparent`, `normal` |\n| MaskClosable | boolean | false | 是否点击遮罩层时关闭，需要和 onCancel 一起使用 |\n| Closable | boolean | false | 右上角是否显示关闭按钮，需要和 onCancel 一起使用 |\n| OnCancel | () => void | - | 如果 maskClosable 或 closable 为 true，那么点击遮罩或者右上角关闭按钮会调用此函数 |\n| Title | ReactNode | - | 标题 |\n| Footer | ReactNode | - | 弹窗底部内容 |\n| Destroy | boolean | true | 弹层关闭后是否移除节点 |\n| AfterOpen | () => void | - | 模态框打开后的回调 |\n| AfterClose | () => void | - | 模态框关闭后的回调 |\n| MountContainer | HTMLElement | () => HTMLElement | document.body | 指定 Modal 挂载的 HTML 节点 |\n| Title | ReactNode | - | 弹出框的标题 |\n| Content | ReactNode | - | 弹出框的内容 |\n| CancelText | ReactNode | '关闭'(Alert)/'取消'(Confirm) | 取消按钮的内容 |\n| OkText | ReactNode | '确认' | 确认按钮的内容 |\n| OnOk | () => void | - | 点击“确认”后的回调函数(Confirm) |\n| OnCancel | () => void | - | 点击“关闭/取消”后的回调函数 |\n\n",
  "Panel": "| props | 类型 | 默认值 | 说明 |\n| :--- | :--- | :--- | :--- |\n| Title | ReactNode | - | 标题渲染 |\n| More | ReactNode | - | 更多渲染 |\n\n",
  "Picker": "| props | 类型 | 默认值 | 说明 |\n| :--- | :--- | :--- | :--- |\n| DataSource | DataSource | [] | 数据源 |\n| Value | string \\| number \\| boolean \\| Array | - | 值 |\n| DefaultValue | string \\| number \\| boolean \\| Array | - | 初始值 |\n| WheelDefaultValue | string \\| number \\| boolean \\| Array | - | 滚轮初始停留的位置 |\n| ValueMember | string | 'value' | 值字段对应的 key |\n| ItemRender | (data?: { [key: string]: string | number | boolean }) => ReactNode | (data) => data.label | 单个选项的展示 |\n| Disabled | boolean | false | 是否禁用 |\n| Cols | number | Infinity | 级联选择器的级数 |\n| OnChange | (selected?: Array<{ [key: string]: string | number | boolean }>) => void | - | 值变化时触发的回调函数 |\n| Title | string | '请选择' | 选择器标题 |\n| OkText | string | '确定' | 确定栏文字 |\n| CancelText | string | '取消' | 取消栏文字 |\n| MaskClosable | boolean | true | 是否点击遮罩层时关闭，需要和 onCancel 一起使用 |\n| Destroy | boolean | false | 弹层关闭后是否移除节点 |\n| OnOk | (selected?: Array<{ [key: string]: string | number | boolean }>) => void | - | 点击确定时触发的回调函数 |\n| OnCancel | () => void | - | 点击取消时触发的回调函数 |\n| MountContainer | HTMLElement | () => HTMLElement | document.body | 指定 Picker 挂载的 HTML 节点 |\n| Visible | boolean | false | 是否展示 |\n| Placeholder | string | '请选择' | 输入提示信息 |\n| HasArrow | boolean | true | 是否显示箭头 |\n| DisplayRender | (selected?: Array<{ [key: string]: string | number | boolean }>) => ReactNode | selected => selected.map(item => item.label) | 所选值的展示 |\n\n",
  "Popper": "| props | 类型 | 默认值 | 说明 |\n| :--- | :--- | :--- | :--- |\n| ClassName | string | - | 气泡层类名追加 |\n| Content | ReactNode | - | 显示内容 |\n| HasArrow | boolean | false | 是否显示箭头节点 |\n| Destroy | boolean | true | 气泡层关闭后是否移除节点 |\n| MountContainer | HTMLElement | () => HTMLElement | document.body | 指定 Popper 挂载的 HTML 节点 |\n| AnimationType | string | 'zoomFade' | 可选值 `zoomFade`, `menuSlide`, `fade`, `door`, `flip`, `rotate`, `zoom`,`moveUp`, `moveDown`, `moveLeft`, `moveRight`,`slideUp`, `slideDown`, `slideLeft`, `slideRight` |\n| AnimationDuration | number | 200 | 动画执行时间（单位：毫秒） |\n| ArrowPointAtCenter | boolean | false | 箭头是否指向目标元素中心 |\n| MouseEnterDelay | number | 100 | 鼠标移入显示气泡层的延时时间（单位：毫秒） |\n| MouseLeaveDelay | number | 100 | 鼠标移出隐藏气泡层的延时时间（单位：毫秒） |\n| Direction | string | 'top' | 显示方向，可选值 `topLeft`、`top`、`topRight`、`rightTop`、`right`、`rightBottom`、`bottomLeft`、`bottom`、`bottomRight`、`leftTop`、`left`、`leftBottom` |\n| Trigger | string | 移动端为'click'  | 触发方式，可选值为：`click` 点击触发状态、`hover` 鼠标经过触发、`focus` 聚焦状态触发、`manual` 受控触发、`contextMenu` 右键触发 |\n| Visible | boolean | false | 是否显示，`trigger='manual'` 时有效 |\n| OnVisibleChange | (visible?: boolean) => void | () => {} | 显示/隐藏 气泡层触发的事件 |\n\n",
  "Popup": "| props | 类型 | 默认值 | 说明 |\n| :--- | :--- | :--- | :--- |\n| Visible | boolean | false | 是否显示 |\n| Direction | string | 'bottom' | 弹出方向，可选值 `top`, `bottom`, `left`, `right`, `center` |\n| AnimationType | string | 'fade' | 当弹出方向为中间位置（direction=\"center\"）时的动画效果，可选值 `fade`, `door`, `flip`, `rotate`, `zoom`,`moveUp`, `moveDown`, `moveLeft`, `moveRight`,`slideUp`, `slideDown`, `slideLeft`, `slideRight` |\n| AnimationDuration | number | 200 | 动画执行时间（单位：毫秒） |\n| Width | string | number | - | 弹层宽度 |\n| Mask | boolean | true | 是否展示遮罩层 |\n| MaskType | string | 'normal' | 遮罩层的类型，可选值 `transparent`, `normal` |\n| Destroy | boolean | true | 弹层关闭后是否移除节点 |\n| AfterOpen | () => void | - | 弹层展示后的回调 |\n| AfterClose | () => void | - | 弹层关闭后的回调 |\n| OnMaskClick | () => void | - | 点击遮罩层时触发的回调函数 |\n| OnEsc | () => void | - | 点击 Esc 键时触发的回调函数 |\n| MountContainer | HTMLElement | () => HTMLElement | document.body | 指定 Popup 挂载的 HTML 节点 |\n\n",
  "Progress": "| props | 类型 | 默认值 | 说明 |\n| :--- | :--- | :--- | :--- |\n| Theme | string | 'primary' | 主题，可选值 `primary`, `success`, `warning`, `danger` |\n| Size | string | 'md' | 大小，可选值 `lg`, `md`, `sm`，number 类型的值，或者任何合法的 css 宽度值 |\n| Shape | string | 'line' | 形状，可选值 `line`, `circle`, `semi-circle` |\n| Percent | number | 0 | 进度百分比（范围：0 ～ 100） |\n| Text | (percent?: number) => ReactNode | (percent) => \\`${percent}%\\` | 进度文本显示 |\n| StrokeShape | string | 'round' | 线条形状，可选值 `round`, `rect` |\n| StrokeWidth | number | - | 线条粗细，单位: px，不设置则根据大小自动调整 |\n\n",
  "Pull": "| props | 类型 | 默认值 | 说明 |\n| :--- | :--- | :--- | :--- |\n| Refresh | Action | - | 下拉刷新的参数配置 |\n| Load | Action | - | 上拉加载的参数配置 |\n| AnimationDuration | number | 400 | 动画执行时间，单位：毫秒 |\n| StayTime | number | 1000 | 加载成功停留时间 |\n| State | REFRESH_STATE | LOAD_STATE | 0 | 状态枚举 |\n| StartDistance | number | 30 | 下拉时的助跑距离，单位：px |\n| Distance | number | 30 | 触发距离阀值，单位：px；下拉刷新阀值默认为 30px，上拉加载阀值默认为 0 |\n| Render | (refreshState: REFRESH_STATE | LOAD_STATE, percent: number) => ReactNode | - | 各状态渲染的回调函数 |\n| Handler | () => void | - | 达到阀值后释放触发的回调函数 |\n| Normal | 普通状态 | undefined | - |\n| Pull | 下拉状态（未满足刷新条件） | undefined | - |\n| Drop | 释放立即刷新（满足刷新条件） | undefined | - |\n| Loading | 加载中 | undefined | - |\n| Success | 加载成功 | undefined | - |\n| Failure | 加载失败 | undefined | - |\n| Normal | 普通状态 | undefined | - |\n| Abort | 终止状态 | undefined | - |\n| Loading | 加载中 | undefined | - |\n| Success | 加载成功 | undefined | - |\n| Failure | 加载失败 | undefined | - |\n| Complete | 加载完成 | undefined | - |\n\n",
  "Radio": "| props | 类型 | 默认值 | 说明 |\n| :--- | :--- | :--- | :--- |\n| Value | string \\| number | - | 值 |\n| Checked | boolean | - | 当前是否选中 |\n| DefaultChecked | boolean | - | 初始是否选中 |\n| Disabled | boolean | false | 是否禁用 |\n| OnChange | (e: ChangeEvent | - | 值变化时触发的回调函数 |\n| Type | string | - | 显示类型，可选值 `button`, `cell` |\n| Value | string \\| number | - | 选中值 |\n| DefaultValue | string \\| number | - | 初始选中值 |\n| Disabled | boolean | false | 是否禁用 |\n| Block | boolean | false | 子项是否为块级元素 |\n| OnChange | (value?: string \\| number) => void | - | 值变化时触发的回调函数 |\n| Size | string | 'xs' | 按钮类型时的大小，可选值为 `lg`、`md`、`sm`、`xs` |\n| Shape | string | 'radius' | 按钮类型时的形状，可选值 `rect`, `radius`, `round` |\n| Ghost | boolean | false | 按钮类型时，选中项样式是否为幽灵按钮 |\n| Compact | boolean | false | 按钮类型时，是否为紧凑模式 |\n\n",
  "Scroller": "| props | 类型 | 默认值 | 说明 |\n| :--- | :--- | :--- | :--- |\n| Container | HTMLElement \\| (() => HTMLElement) | window | 设置滚动容器 |\n| OnScroll | (scrollTop?: number) => void | - | 滚动时触发的回调函数 |\n\n",
  "Slider": "| props | 类型 | 默认值 | 说明 |\n| :--- | :--- | :--- | :--- |\n| Value | number | - | 值 |\n| DefaultValue | number | - | 初始值 |\n| Min | number | 0 | 最小值 |\n| Max | number | 100 | 最大值 |\n| Disabled | boolean | false | 是否禁用 |\n| Step | number | 1 | 步长 |\n| Vertical | boolean | false | 是否为纵向 |\n| ShowMark | boolean | false | 是否显示标记刻度 |\n| Marks | { [key: number]: React.ReactNode } | {} | 自定义标记刻度的渲染展示 |\n| OnChange | (value?: number) => void | - | 值变化时触发的回调函数 |\n\n",
  "Stepper": "| props | 类型 | 默认值 | 说明 |\n| :--- | :--- | :--- | :--- |\n| Shape | string | 'radius' | 形状，可选值 `rect`, `radius`, `circle` |\n| Size | string | 'md' | 大小，可选值 `md`、`lg` |\n| Type | string | 'text' | 输入类型，可选值 `text`、`number`、`price`、`tel` |\n| Value | number \\| string | - | 值 |\n| DefaultValue | number | - | 初始值 |\n| Min | number | - | 最小值 |\n| Max | number | - | 最大值 |\n| Step | number | 1 | 步长 |\n| Disabled | boolean | false | 是否禁用 |\n| DisableInput | boolean | false | 是否禁用输入框 |\n| OnInputChange | (value?: number ｜ string) => void | - | 输入值变化时触发的回调函数 |\n| OnChange | (value?: number ｜ string) => void | - | 值变化时触发的回调函数 |\n\n",
  "Switch": "| props | 类型 | 默认值 | 说明 |\n| :--- | :--- | :--- | :--- |\n| Checked | boolean | - | 值 |\n| DefaultChecked | boolean | - | 初始值 |\n| Disabled | boolean | false | 是否禁用 |\n| OnChange | (value?: boolean) => void | - | 值变化时触发的回调函数 |\n\n",
  "Tabs": "| props | 类型 | 默认值 | 说明 |\n| :--- | :--- | :--- | :--- |\n| Value | number | - | 值 |\n| DefaultValue | number | - | 初始值 |\n| Disabled | boolean | false | 是否禁用 |\n| Direction | `horizontal` \\| `vertical` | 'horizontal' | 方向 |\n| Swipeable | boolean | false | 是否支持滑动切换 |\n| Scrollable | boolean | false | 是否支持滚动 |\n| LineWidth | number \\| string | - | 线条宽度 |\n| OnChange | (index?: number) => void | - | 值变化时触发的回调函数 |\n| Title | ReactNode | - | 标题 |\n| Children | ReactNode | - | 内容 |\n| Disabled | boolean | false | 是否禁用 |\n\n",
  "Toast": "| props | 类型 | 默认值 | 说明 |\n| :--- | :--- | :--- | :--- |\n| Visible | boolean | false | 是否展示 |\n| Content | ReactNode | - | 显示的内容 |\n| StayTime | number | 3000 | 自动关闭前停留的时间（单位：毫秒） |\n| Mask | boolean | false | 是否展示遮罩层 |\n| OnMaskClick | () => void | - | 点击遮罩层时触发的回调函数 |\n| AfterClose | () => void | - | Toast 隐藏后的回调函数 |\n| MountContainer | HTMLElement | () => HTMLElement | document.body | 指定 Toast 挂载的 HTML 节点 |\n\n",
  "Tooltip": "| props | 类型 | 默认值 | 说明 |\n| :--- | :--- | :--- | :--- |\n| Visible | boolean | false | 是否显示 |\n| Content | ReactNode | - | 显示内容 |\n| HasArrow | boolean | false | 是否带有箭头 |\n| ArrowPointAtCenter | boolean | false | 箭头是否指向目标元素中心 |\n| ClassName | string | - | 气泡层类名追加 |\n| MouseEnterDelay | number | 100 | 鼠标移入后延时多少才显示气泡层，单位：毫秒 |\n| MouseLeaveDelay | number | 100 | 鼠标移出后延时多少才隐藏气泡层，单位：毫秒 |\n| Direction | string | 'top' | 显示方向，可选值 `topLeft`、`top`、`topRight`、`rightTop`、`right`、`rightBottom`、`bottomLeft`、`bottom`、`bottomRight`、`leftTop`、`left`、`leftBottom` |\n| Trigger | string | 'click' | 触发方式，PC 端默认值为 'hover', 可选值为：点击触发`click`、鼠标经过触发`hover`、聚焦状态触发`focus`、受控触发`manual`、右键触发`contextMenu` |\n| OnVisibleChange | (visible?: boolean) => void | noop | 显示/隐藏触发的事件 |\n\n"
}